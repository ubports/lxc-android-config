description "Allow users in 'android_input' group to use LEDs"
author "Ratchanan Srirattanamet <ratchanan@ubports.com>"

# Make LED files writable for the (Android's) input group, so the phablet user
# can also access it (and we can use the lights hal as phablet).

# To be future-proof, instead of hard-coding list of files to chown/chmod,
# use "find" to find all files applicable. It search for only 1 level deep and
# exclude "uevent" and "trigger" to not introduce vulnerability.

start on android and filesystem
task

script
    # Android's init.rc set these files' property in "on boot" event, which
    # happens significantly after "android" upstart event. If we run too early,
    # our work will be overwritten by init.rc.

    # To solve this issue, wait for this specific property to be set, which
    # is the last thing Android 5+ does in init.rc's "on boot" section.
    # https://github.com/Halium/android_system_core/blob/e8d89cb8265c2f4e53a133256486a37bba787a8a/rootdir/init.rc#L586
    
    # "This specific property" is different for Android 4.4
    # https://github.com/peat-psuwit/ubuntu-phone_system_core/blob/244d3b9db762b6c1fc319fdca16c7d1c0264802a/rootdir/init.rc#L377

    # FIXME: There should be a better way to do this.

    # Don't wait forever. Some device may not even set this property.
    TIMEOUT=15
    COUNT=0
    while [ -z "$(getprop net.tcp.default_init_rwnd)" ] && \
          [ -z "$(getprop net.tcp.buffersize.default)" ] && \
          [ "$COUNT" -lt "$TIMEOUT" ]; do 
        sleep 1
        COUNT=$(( COUNT + 1 ))
    done

    exec find /sys/class/leds/*/ -maxdepth 1 -type f \
        ! -name uevent ! -name trigger \
        -exec chown system:android_input '{}' '+' \
        -exec chmod 664 '{}' '+'
end script
