# lxc-android-config - LXC Android Config and Container Initialization
#
# Configure and initialize the Android container for Ubuntu Touch

description "lxc android config and container initialization"

start on cgmanager-ready and started cgroup-lite and started udev
stop on runlevel [06]

pre-start script
    if [ ! -d /sys/fs/cgroup/systemd ]; then
        mkdir -p /sys/fs/cgroup/systemd
        mount -t cgroup cgroup /sys/fs/cgroup/systemd -o name=systemd
    fi
end script

exec lxc-start -n android -F -- /init

post-start script
    if [ ! -d /dev/cpuctl ] && [ -d /sys/fs/cgroup/cpu ]; then
        ln -s /sys/fs/cgroup/cpu /dev/cpuctl
    fi

    lxc-wait -n android -s RUNNING -t 30
    containerpid="$(lxc-info -n android -p -H)"
    if [ -n "$containerpid" ]; then
        while true; do
            [ -f /proc/$containerpid/root/dev/.coldboot_done ] && break
            sleep 0.1
        done

        # If the socket isn't available, 'getprop' falls back to reading files
        # manually, causing a false positive of propertyservice being up
        while [ ! -e /dev/socket/property_service ]; do sleep 0.1; done

        # This property is read by libhybris itself to pick a linker, so it
        # *MUST* be available before we emit 'android'.
        while [ -z "$(getprop ro.build.version.sdk)" ]; do sleep 0.1; done

        # Allow custom properties before announcing that the boot is completed
        if [ -f /custom/custom.prop ]; then
            grep "^custom\." /custom/custom.prop | sed 's/=/ /' | while read property value; do
                setprop $property $value
            done
        fi

        # Hide all the cgroups again
        stop cgroup-lite
        if [ -d /sys/fs/cgroup/systemd ]; then
            umount /sys/fs/cgroup/systemd
            rmdir /sys/fs/cgroup/systemd
        fi

        initctl emit android
    else
        stop; exit 1
    fi
end script

pre-stop exec lxc-stop -n android -k
